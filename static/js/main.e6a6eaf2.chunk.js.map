{"version":3,"sources":["TodoListItem.tsx","TodoList.tsx","AddTodoForm.tsx","AddTodoListForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","classes","makeStyles","theme","textField","margin","spacing","button","formControl","minWidth","selectEmpty","marginTop","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","useStyles","React","useState","checked","setChecked","JSON","parse","localStorage","getItem","filter","storedTodo","complete","map","push","key","ListItem","role","undefined","dense","className","onClick","value","currentIndex","indexOf","newChecked","splice","handleToggle","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","text","ListItemText","primary","TodoList","project","title","todos","listTodos","item","open","setOpen","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","AddTodoForm","addTodo","todoLists","setText","setProject","length","TextField","variant","required","id","label","onChange","e","target","InputProps","startAdornment","InputAdornment","position","Assignment","FormControl","InputLabel","htmlFor","Select","native","name","list","Button","color","startIcon","type","size","disabled","parseInt","preventDefault","AddTodoListForm","addTodoList","initialTodos","initialLists","App","setTodoLists","setTodos","selectedTodo","newTodos","setItem","stringify","aria-labelledby","subheader","ListSubheader","newTodo","newTodoList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6a6eaf2.chunk.js","sourcesContent":["import React from 'react';\nimport {ListItem, ListItemText} from \"@material-ui/core\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\ninterface Props {\n    todo: Todo;\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoListItem: React.FC<Props> = ({todo, toggleTodo}) => {\n\n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            margin: theme.spacing(1),\n        },\n        button: {\n            margin: theme.spacing(1),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    }));\n\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n\n    const stored: any = JSON.parse(localStorage.getItem('todos') || \"\");\n\n    stored.filter((storedTodo: any) => storedTodo.complete).map((storedTodo: any) => (\n        checked.push(storedTodo.key)\n    ))\n\n    const handleToggle = (value: number) => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        toggleTodo(todo);\n        setChecked(newChecked);\n    };\n\n    return (\n        <ListItem key={todo.key} role={undefined} dense button className={classes.nested}\n                  onClick={() => handleToggle(todo.key)}>\n            <ListItemIcon>\n                <Checkbox\n                    edge=\"start\"\n                    checked={checked.indexOf(todo.key) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{'aria-labelledby': todo.text}}\n                />\n            </ListItemIcon>\n            <ListItemText primary={todo.text}/>\n        </ListItem>\n    );\n};","import React from 'react';\nimport {TodoListItem} from './TodoListItem';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\n\ninterface Props {\n    project: number;\n    title: string;\n    todos: Todo[];\n    toggleTodo: ToggleTodo;\n}\n\nexport const TodoList: React.FC<Props> = ({project, title, todos, toggleTodo}) => {\n    const listTodos = todos.filter(item => item.project === project);\n\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <>\n            <ListItem button onClick={handleClick}>\n                <ListItemText primary={title}/>\n                {open ? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        listTodos.map(todo => (\n                            <TodoListItem key={todo.key} todo={todo} toggleTodo={toggleTodo}/>\n                        ))\n                    }\n                </List>\n            </Collapse>\n        </>\n    );\n};","import React, {useState} from 'react';\nimport {Button} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {Assignment} from \"@material-ui/icons\";\n\ninterface Props {\n    addTodo: AddTodo;\n    todoLists: TodoList[];\n}\n\nexport const AddTodoForm: React.FC<Props> = ({addTodo, todoLists}) => {\n    const [text, setText] = useState('');\n    const [project, setProject] = useState('');\n\n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            margin: theme.spacing(1),\n        },\n        button: {\n            margin: theme.spacing(2),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }));\n\n    const classes = useStyles();\n\n    const addTodoItem = (e: any) => {\n        e.preventDefault();\n        addTodo(text, parseInt(project));\n        setText('');\n    }\n\n    const handleChange = (e: any) => {\n        setProject(e.target.value);\n    }\n\n    if (todoLists.length === 0) {\n        return (<></>);\n    }\n\n    return (\n        <form>\n            <TextField\n                variant=\"filled\"\n                className={classes.formControl}\n                required\n                id={\"task\"}\n                label={\"Task\"}\n                value={text}\n                onChange={e => {\n                    setText(e.target.value);\n                }}\n                InputProps={{\n                    startAdornment: (\n                    <InputAdornment position=\"start\">\n                    <Assignment />\n                    </InputAdornment>\n                    ),\n                }\n                }/>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel htmlFor=\"project\">Project</InputLabel>\n                <Select\n                    native\n                    value={project}\n                    onChange={handleChange}\n                    inputProps={{\n                        name: 'project',\n                        id: 'project',\n                    }}\n                >\n                    {todoLists.map(list => (\n                        <option key={list.key} value={list.key}>{list.text}</option>\n                    ))}\n\n                </Select>\n            </FormControl>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<AddIcon/>}\n                type=\"submit\"\n                size=\"large\"\n                disabled={ (!parseInt(project) || !text.length) }\n                onClick={addTodoItem}\n            >\n                Add Todo\n            </Button>\n        </form>\n    );\n};\n","import React, {useState} from 'react';\nimport {Button} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {List} from \"@material-ui/icons\";\n\ninterface Props {\n    addTodoList: AddTodoList;\n}\n\nexport const AddTodoListForm: React.FC<Props> = ({addTodoList}) => {\n    const [text, setText] = useState('');\n\n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            margin: theme.spacing(1),\n        },\n        button: {\n            margin: theme.spacing(2),\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }));\n\n    const classes = useStyles();\n\n    const addList = (e: any) => {\n        e.preventDefault();\n        addTodoList(text);\n        setText('');\n    }\n\n    const handleChange = (e: any) => {\n        setText(e.target.value);\n    }\n\n    return (\n        <form>\n            <TextField\n                variant=\"filled\"\n                className={classes.formControl}\n                required\n                id={\"list\"}\n                label={\"Name\"}\n                value={text}\n                onChange={handleChange}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <List/>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<AddIcon/>}\n                type=\"submit\"\n                size=\"large\"\n                disabled={!text}\n                onClick={addList}\n            >\n                Add List\n            </Button>\n        </form>\n    );\n}\n","import React, {useState} from 'react';\nimport {TodoList} from './TodoList';\nimport {AddTodoForm} from './AddTodoForm';\nimport {AddTodoListForm} from './AddTodoListForm';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst initialTodos: Todo[] = JSON.parse(localStorage.getItem('todos') ?? '[]');\nconst initialLists: TodoList[] = JSON.parse(localStorage.getItem('todoLists') ?? '[]');\n\nfunction App() {\n    const [todoLists, setTodoLists] = useState(initialLists);\n    const [todos, setTodos] = useState(initialTodos);\n\n    const toggleTodo: ToggleTodo = (selectedTodo: Todo) => {\n        const newTodos = todos.map(todo => {\n            if (todo === selectedTodo) {\n                return {\n                    ...todo,\n                    complete: !todo.complete,\n                };\n            }\n            return todo;\n        });\n\n\n        setTodos(newTodos);\n        localStorage.setItem('todos', JSON.stringify(newTodos));\n    };\n\n    const addTodo: AddTodo = (text: string, project: number) => {\n        const newTodo = {key: todos.length + 1, text, project, complete: false};\n        setTodos([...todos, newTodo]);\n        localStorage.setItem('todos', JSON.stringify([...todos, newTodo]));\n    };\n\n    const addTodoList: AddTodoList = (text: string) => {\n        const newTodoList = {key: todoLists.length + 1, text};\n        setTodoLists([...todoLists, newTodoList]);\n        localStorage.setItem('todoLists', JSON.stringify([...todoLists, newTodoList]));\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                        ToDos\n                    </ListSubheader>\n                }\n                className={classes.root}\n            >\n                {todoLists.map(list => (\n                    <TodoList key={list.key} project={list.key} title={list.text} todos={todos}\n                              toggleTodo={toggleTodo}/>\n                ))}\n            </List>\n            <AddTodoForm addTodo={addTodo} todoLists={todoLists}/>\n            <AddTodoListForm addTodoList={addTodoList}/>\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}